{"version":3,"sources":["components/ContactItem/ContactItem.module.scss","components/Filter/Filter.module.scss","App.module.scss","components/ContactList/ContactList.module.scss","components/Container/Container.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","reset","className","styles","event","preventDefault","contact","id","shortid","generate","checkSameName","find","checkSameNumber","alert","formLabel","formText","formInput","type","placeholder","value","onChange","currentTarget","autoComplete","defaultCountry","international","formBtn","ContactItem","onDeleteContact","phoneNumber","href","aria-label","contactBtn","onClick","ContactList","length","notification","map","defaultProps","Filter","filter","onChangeFilter","filterLabel","filterText","filterInput","Container","children","App","setContacts","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","title","prevState","titleContacts","normalizedFilter","toLowerCase","includes","getContactsToShow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,WAAa,gCAAgC,YAAc,mC,mBCA5HD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,WAAa,2BAA2B,YAAc,8B,mBCAlHD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,mBAAmB,cAAgB,6B,mBCApFD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,aAAe,oC,mBCAhFD,EAAOC,QAAU,CAAC,UAAY,+B,uCCA9BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,QAAU,6BAA6B,UAAY,+BAA+B,SAAW,gC,iKCkG/IC,EA1FK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAAe,EACtBC,mBAAS,IADa,mBACvCC,EADuC,KACjCC,EADiC,OAElBF,mBAAS,IAFS,mBAEvCG,EAFuC,KAE/BC,EAF+B,KAgDxCC,EAAQ,WACZH,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAME,UAAWC,IAAOV,YAAaE,SAxCd,SAAAS,GAGvB,GAFAA,EAAMC,iBAEDR,GAASE,EAAd,CAKA,IAAMO,EAAU,CACdC,GAAIC,IAAQC,WACZZ,OACAE,UAGIW,EAAgBhB,EAASiB,MAAK,qBAAGd,OAAoBS,EAAQT,QAC7De,EAAkBlB,EAASiB,MAC/B,qBAAGZ,SAAwBO,EAAQP,UAGrC,GAAIa,EAAJ,CAAsB,IACZf,EAAiBe,EAAjBf,KAAME,EAAWa,EAAXb,OACdc,MAAM,gCAAD,OAAiChB,EAAjC,aAA0CE,EAA1C,WAIHW,EACFG,MAAM,GAAD,OAAIhB,EAAJ,6BAIPF,EAASW,GACTL,UA3BEY,MAAM,6CAoCR,UACE,wBAAOX,UAAWC,IAAOW,UAAzB,UACE,sBAAMZ,UAAWC,IAAOY,SAAxB,kBACA,uBACEb,UAAWC,IAAOa,UAClBC,KAAK,OACLC,YAAY,uBACZrB,KAAK,OACLsB,MAAOtB,EACPuB,SA3Da,SAAAhB,GAAU,IAAD,EACJA,EAAMiB,cAAtBxB,EADoB,EACpBA,KAAMsB,EADc,EACdA,MACD,SAATtB,GACFC,EAAQqB,IAyDJG,aAAa,WAGjB,wBAAOpB,UAAWC,IAAOW,UAAzB,UACE,sBAAMZ,UAAWC,IAAOY,SAAxB,oBACA,cAAC,IAAD,CAEEI,MAAOpB,EACPqB,SAAUpB,EACVuB,eAAe,KACfC,eAAa,EACbF,aAAa,WAIjB,wBAAQpB,UAAWC,IAAOsB,QAASR,KAAK,SAAxC,6B,iBCrDSS,EA/BK,SAAC,GAAkC,IAAhCpB,EAA+B,EAA/BA,QAASqB,EAAsB,EAAtBA,gBACtBpB,EAAqBD,EAArBC,GAAIV,EAAiBS,EAAjBT,KAAME,EAAWO,EAAXP,OAElB,OACE,qBAAIG,UAAWC,IAAOuB,YAAtB,UACE,iCACG7B,EADH,IAEE,mBACEK,UAAWC,IAAOyB,YAClBC,KAAM,OAAS9B,EACf+B,aAAW,OAHb,SAKG/B,OAGL,wBAAQG,UAAWC,IAAO4B,WAAYC,QAAS,kBAAML,EAAgBpB,IAArE,wB,iBCdA0B,EAAc,SAAC,GAAD,IAAGvC,EAAH,EAAGA,SAAUiC,EAAb,EAAaA,gBAAb,OACE,IAApBjC,EAASwC,OACP,mBAAGhC,UAAWC,IAAOgC,aAArB,mCAEA,oBAAIjC,UAAWC,IAAO8B,YAAtB,SACGvC,EAAS0C,KAAI,SAAA9B,GAAY,IAChBC,EAAOD,EAAPC,GAER,OACE,cAAC,EAAD,CAEED,QAASA,EACTqB,gBAAiBA,GAFZpB,SASjB0B,EAAYI,aAAe,CACzB3C,SAAU,IAcGuC,Q,iBCjBAK,EAlBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,eAAX,OACb,wBAAOtC,UAAWC,IAAOsC,YAAzB,UACE,sBAAMvC,UAAWC,IAAOuC,WAAxB,mCACA,uBACExC,UAAWC,IAAOwC,YAClB1B,KAAK,OACLC,YAAY,uBACZC,MAAOoB,EACPnB,SAAUoB,Q,iBCDDI,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAK3C,UAAWC,IAAOyC,UAAvB,SAAmCC,K,iBCkDtBC,EA7CH,WAAO,IAAD,EACgBlD,mBAAS,IADzB,mBACTF,EADS,KACCqD,EADD,OAEYnD,mBAAS,IAFrB,mBAET2C,EAFS,KAEDS,EAFC,KAIhBC,qBAAU,WACRF,EAAYG,KAAKC,MAAMC,aAAaC,QAAQ,gBAC3C,IAEHJ,qBAAU,WACRG,aAAaE,QAAQ,WAAYJ,KAAKK,UAAU7D,MAC/C,CAACA,IAkBJ,OACE,qBAAKQ,UAAWC,IAAO2C,IAAvB,SACE,eAAC,EAAD,WACE,oBAAI5C,UAAWC,IAAOqD,MAAtB,uBACA,cAAC,EAAD,CAAa9D,SAAUA,EAAUC,SApBjB,SAAAW,GAAO,OAC3ByC,GAAY,SAAAU,GAAS,OAAKnD,GAAL,mBAAiBmD,UAqBlC,oBAAIvD,UAAWC,IAAOuD,cAAtB,sBACA,cAAC,EAAD,CAAQvC,MAAOoB,EAAQC,eApBF,SAAApC,GAAK,OAAI4C,EAAU5C,EAAMiB,cAAcF,UAqB5D,cAAC,EAAD,CACEzB,SApBkB,WACxB,IAAMiE,EAAmBpB,EAAOqB,cAEhC,OAAOlE,EAAS6C,QAAO,qBAAG1C,KACnB+D,cAAcC,SAASF,MAgBdG,GACVnC,gBAboB,SAAApB,GAAE,OAC5BwC,GAAY,SAAAU,GAAS,OAAIA,EAAUlB,QAAO,SAAAjC,GAAO,OAAIA,EAAQC,KAAOA,iBC7BxEwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.054b6000.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__BaBkc\",\"contactBtn\":\"ContactItem_contactBtn__3Brcx\",\"phoneNumber\":\"ContactItem_phoneNumber__28cZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__kG0cf\",\"filterText\":\"Filter_filterText__2x943\",\"filterInput\":\"Filter_filterInput__3TgyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1IDO3\",\"title\":\"App_title__2OPhA\",\"titleContacts\":\"App_titleContacts__2moAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2RCty\",\"notification\":\"ContactList_notification__6AiVC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1l8TT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1G1uu\",\"formBtn\":\"ContactForm_formBtn__35ztP\",\"formLabel\":\"ContactForm_formLabel__V0pnG\",\"formText\":\"ContactForm_formText__uEJua\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport shortid from 'shortid';\nimport PhoneInput from 'react-phone-number-input';\n\nimport styles from './ContactForm.module.scss';\nimport 'react-phone-number-input/style.css';\n\nconst ContactForm = ({ contacts, onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    }\n    // if (name === 'number') {\n    //   setNumber(value);\n    // }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    if (!name || !number) {\n      alert('Please enter the correct name and number');\n      return;\n    }\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const checkSameName = contacts.find(({ name }) => name === contact.name);\n    const checkSameNumber = contacts.find(\n      ({ number }) => number === contact.number,\n    );\n\n    if (checkSameNumber) {\n      const { name, number } = checkSameNumber;\n      alert(`This number already exists: \"${name}: ${number}\"`);\n      return;\n    }\n\n    if (checkSameName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    onSubmit(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={handleFormSubmit}>\n      <label className={styles.formLabel}>\n        <span className={styles.formText}>Name</span>\n        <input\n          className={styles.formInput}\n          type=\"text\"\n          placeholder=\"Enter contact's name\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className={styles.formLabel}>\n        <span className={styles.formText}>Number</span>\n        <PhoneInput\n          // name=\"number\"\n          value={number}\n          onChange={setNumber}\n          defaultCountry=\"UA\"\n          international\n          autoComplete=\"off\"\n        />\n      </label>\n\n      <button className={styles.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nimport styles from './ContactItem.module.scss';\n\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  const { id, name, number } = contact;\n\n  return (\n    <li className={styles.ContactItem}>\n      <span>\n        {name}:\n        <a\n          className={styles.phoneNumber}\n          href={'tel:' + number}\n          aria-label=\"Call\"\n        >\n          {number}\n        </a>\n      </span>\n      <button className={styles.contactBtn} onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from '../ContactItem';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.scss';\n\nconst ContactList = ({ contacts, onDeleteContact }) =>\n  contacts.length === 0 ? (\n    <p className={styles.notification}>Contact book is empty</p>\n  ) : (\n    <ul className={styles.ContactList}>\n      {contacts.map(contact => {\n        const { id } = contact;\n\n        return (\n          <ContactItem\n            key={id}\n            contact={contact}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ filter, onChangeFilter }) => (\n  <label className={styles.filterLabel}>\n    <span className={styles.filterText}>Find contacts by name</span>\n    <input\n      className={styles.filterInput}\n      type=\"text\"\n      placeholder=\"Enter contact's name\"\n      value={filter}\n      onChange={onChangeFilter}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styles from './Container.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState, useEffect } from 'react';\r\n\r\nimport ContactForm from 'components/ContactForm';\r\nimport ContactList from 'components/ContactList';\r\nimport Filter from 'components/Filter';\r\nimport Container from 'components/Container';\r\n\r\nimport styles from './App.module.scss';\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    setContacts(JSON.parse(localStorage.getItem('contacts')));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addNewContact = contact =>\r\n    setContacts(prevState => [contact, ...prevState]);\r\n\r\n  const handleChangeFilter = event => setFilter(event.currentTarget.value);\r\n\r\n  const getContactsToShow = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const handleDeleteContact = id =>\r\n    setContacts(prevState => prevState.filter(contact => contact.id !== id));\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <Container>\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <ContactForm contacts={contacts} onSubmit={addNewContact} />\r\n\r\n        <h2 className={styles.titleContacts}>Contacts</h2>\r\n        <Filter value={filter} onChangeFilter={handleChangeFilter} />\r\n        <ContactList\r\n          contacts={getContactsToShow()}\r\n          onDeleteContact={handleDeleteContact}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}